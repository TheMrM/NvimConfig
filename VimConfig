" ==================== General Settings ====================

" Automatically open files in horizontal split if multiple files are opened
if argc() > 1
  for i in range(1, argc() - 1)
    execute 'split ' . argv()[i]
  endfor
  edit argv()[-1]
endif

set nocompatible          " Modern Vim features
set showmatch             " Show matching brackets
set ignorecase            " Case-insensitive search
set mouse=a               " Enable mouse in all modes
set hlsearch              " Highlight search results
set incsearch             " Incremental search
set tabstop=4             " Tab = 4 spaces
set softtabstop=4
set expandtab             " Convert tabs to spaces
set shiftwidth=4          " Indentation width
set autoindent
set number                " Show line numbers
set relativenumber        " Relative numbers
set wildmode=longest,list " Better command line completion
set ttyfast               " Faster scrolling
set clipboard=unnamedplus " Use system clipboard
set spell                 " Enable spellcheck
set spelllang=en_us,ro   " Spellcheck languages
set nobackup              " Disable backups
set nowritebackup
set cmdheight=2          " More command line space
set updatetime=300       " Faster completion
set shortmess+=c
set signcolumn=yes
set backspace=indent,eol,start

filetype plugin indent on
syntax on

highlight clear SpellBad
highlight clear SpellCap
highlight clear SpellLocal
highlight clear SpellRare

" ==================== Plugins ====================

call plug#begin()

" Themes
Plug 'morhetz/gruvbox'
"Plug 'dracula/vim'

" Essentials
Plug 'scrooloose/nerdtree'
Plug 'ryanoasis/vim-devicons'
Plug 'dense-analysis/ale'
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'preservim/nerdcommenter'
Plug 'mhinz/vim-startify'
Plug 'vim-airline/vim-airline'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-dispatch'
Plug 'octol/vim-cpp-enhanced-highlight'

" Advanced
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'neovim/nvim-lspconfig'
Plug 'ThePrimeagen/vim-be-good'
Plug 'github/copilot.vim'

call plug#end()

" ==================== Plugin Config ====================

colorscheme lunaperche

" NERDTree
let g:webdevicons_enable_nerdtree = 1
let g:webdevicons_enable = 1
let g:NERDTreeGitStatusWithFlags = 1
let g:NERDTreeDirArrow = 1

" CoC
let g:coc_global_extensions = [
  \ 'coc-tsserver',
  \ 'coc-json',
  \ 'coc-prettier',
  \ 'coc-eslint',
  \ 'coc-snippets'
  \ ]

" AutoPairs
let g:AutoPairsMapSpace = 1
let g:AutoPairsCenterLine = 1
let g:AutoPairsMultilineClose = 0
let g:AutoPairsCompleteOnlyOnSpace = 1
let g:AutoPairsPreferClose = 0
let g:AutoPairsShortcutToggle = '<M-p>'
let g:AutoPairsShortcutFastWrap = '<M-e>'
let g:AutoPairsShortcutJump = '<M-n>'
let g:AutoPairs = { '(':')', '[':']', '{':'}', '"':'"', "'":"'", '`':'`' }

" ==================== Key Mappings ====================

" Window navigation
nnoremap <silent> <Up> <C-w>k
nnoremap <silent> <Down> <C-w>j
nnoremap <silent> <Left> <C-w>h
nnoremap <silent> <Right> <C-w>l

" CoC Navigation
inoremap <silent><expr> <TAB> pumvisible() ? coc#pum#next(1) : coc#refresh()
inoremap <silent><expr> <S-TAB> pumvisible() ? coc#pum#prev(1) : "\<Tab>"
inoremap <silent><expr> <CR> pumvisible() ? coc#pum#confirm() : "\<CR>"

nmap <silent> [g <Plug>(coc-diagnostic-prev)
nmap <silent> ]g <Plug>(coc-diagnostic-next)
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
nnoremap <silent> K :call CocActionAsync('doHover')<CR>

" AutoPairs space mapping
function! AddSpaceAfterPair()
    if has_key(g:AutoPairs, getline('.')[col('.')-2])
        return "\<Space>\<Space>\<Left>"
    else
        return "\<Space>"
    endif
endfunction
inoremap <expr> <Space> AddSpaceAfterPair()

